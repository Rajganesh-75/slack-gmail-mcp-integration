#!/usr/bin/env python3
"""
Send Slack Conversation to Email
Formats and sends the conversation between you and lmohan
"""

import sys
import os
import shutil
from datetime import datetime

def format_conversation_for_email():
    """Format the conversation between Rajganesh and Lokesh Mohan"""
    
    # Conversation data from Slack
    conversation = [
        {
            "ts": "1756820587.915859",
            "user": "Rajganesh V",
            "username": "rajganesh",
            "text": "master",
            "time": "2025-09-02 19:13 IST"
        },
        {
            "ts": "1756820642.768919", 
            "user": "Lokesh Mohan",
            "username": "lmohan",
            "text": "master app?",
            "time": "2025-09-02 19:14 IST"
        },
        {
            "ts": "1756821544.085799",
            "user": "Rajganesh V", 
            "username": "rajganesh",
            "text": "s",
            "time": "2025-09-02 19:29 IST"
        },
        {
            "ts": "1756821624.880789",
            "user": "Lokesh Mohan",
            "username": "lmohan", 
            "text": "quick call bro",
            "time": "2025-09-02 19:30 IST"
        },
        {
            "ts": "1756821631.020579",
            "user": "Rajganesh V",
            "username": "rajganesh",
            "text": "ok", 
            "time": "2025-09-02 19:30 IST"
        },
        {
            "ts": "1756984049.734509",
            "user": "Lokesh Mohan",
            "username": "lmohan",
            "text": "Hi bro",
            "time": "2025-09-04 16:37 IST"
        },
        {
            "ts": "1756984064.651509", 
            "user": "Rajganesh V",
            "username": "rajganesh",
            "text": "hi bro",
            "time": "2025-09-04 16:37 IST"
        },
        {
            "ts": "1756984086.709669",
            "user": "Lokesh Mohan",
            "username": "lmohan",
            "text": "i need help", 
            "time": "2025-09-04 16:38 IST"
        },
        {
            "ts": "1756984107.980009",
            "user": "Lokesh Mohan", 
            "username": "lmohan",
            "text": "https://rackdash.sqprod.co/ui/test_jobs/645645?task_id=49850980 can you send me the jenkins job link for this if possible",
            "time": "2025-09-04 16:38 IST"
        },
        {
            "ts": "1756985186.765089",
            "user": "Rajganesh V",
            "username": "rajganesh", 
            "text": "sry bro , i tried , but i cann't find it , maybe they triggered manually",
            "time": "2025-09-04 16:56 IST"
        }
    ]
    
    # Format email subject
    subject = "[Slack Conversation] You and Lokesh Mohan - Recent DM Thread"
    
    # Format email body
    body = f"""💬 Slack DM Conversation

Participants: Rajganesh V (@rajganesh) ↔ Lokesh Mohan (@lmohan)
Time Range: September 2-4, 2025
Total Messages in Thread: 73 (showing last 10)
Channel: Private DM

📝 Conversation Thread:
{'='*60}

"""
    
    # Add each message to the conversation
    for i, msg in enumerate(conversation, 1):
        # Add visual separator between days
        if i > 1 and conversation[i-2]['time'].split()[0] != msg['time'].split()[0]:
            body += f"\n--- {msg['time'].split()[0]} ---\n\n"
        
        # Format each message
        if msg['username'] == 'rajganesh':
            body += f"🟢 You ({msg['time']}):\n"
        else:
            body += f"🔵 {msg['user']} ({msg['time']}):\n"
        
        body += f"   {msg['text']}\n\n"
    
    body += f"""{'='*60}

📊 Conversation Summary:
• Total messages in this DM: 73
• Recent activity: September 2-4, 2025
• Last message: September 4, 2025 at 16:56 IST
• Topic: Jenkins job help and technical discussion

🔗 Slack DM Link: https://sq-block.slack.com/archives/D0717LZCW0H

---
This conversation was automatically forwarded from your Slack DM with Lokesh Mohan.
Generated by: Slack-Gmail MCP Bridge
Export Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S IST')}

💡 This shows your recent conversation thread for easy reference and archival.
"""
    
    return subject, body

def send_conversation_email():
    """Send the conversation to email"""
    print("💬 SENDING SLACK CONVERSATION TO EMAIL")
    print("=" * 50)
    
    print("👥 Conversation Details:")
    print("   Participants: You (Rajganesh V) ↔ Lokesh Mohan")
    print("   Time Range: September 2-4, 2025")
    print("   Messages: Last 10 of 73 total messages")
    print("   Topic: Jenkins job help and technical discussion")
    
    # Format the conversation
    subject, body = format_conversation_for_email()
    
    print(f"\n📧 Email Details:")
    print(f"   To: rajganesh47@gmail.com")
    print(f"   Subject: {subject}")
    print(f"   Body Length: {len(body)} characters")
    
    print(f"\n📝 Conversation Preview:")
    print("-" * 40)
    
    # Show a preview of the conversation
    preview_lines = body.split('\n')[:25]  # First 25 lines
    for line in preview_lines:
        print(line)
    
    print("...")
    print("-" * 40)
    
    return {
        "to": "rajganesh47@gmail.com",
        "subject": subject,
        "body": body
    }

def main():
    """Main function"""
    print("💬 SLACK CONVERSATION EXPORT")
    print("This will send your recent DM conversation with Lokesh Mohan to email")
    print()
    
    # Get conversation data
    email_data = send_conversation_email()
    
    print(f"\n🎯 CONVERSATION READY TO SEND")
    print("=" * 40)
    print("✅ Conversation formatted with 10 recent messages")
    print("✅ Includes timestamps and user identification")
    print("✅ Shows conversation flow and context")
    print("✅ Contains Slack DM link for reference")
    
    print(f"\n📧 Email Summary:")
    print(f"   To: {email_data['to']}")
    print(f"   Subject: {email_data['subject']}")
    print(f"   Content: Complete conversation thread")
    
    print(f"\n💡 This email will contain:")
    print("   • Your complete conversation with Lokesh Mohan")
    print("   • Timestamps for each message")
    print("   • Context about Jenkins job help discussion")
    print("   • Link back to original Slack DM")

if __name__ == "__main__":
    main()
