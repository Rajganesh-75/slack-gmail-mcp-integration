#!/usr/bin/env python3
"""
Get User Conversation Command
Simple command to get last conversation with any Slack user and send to email
"""

import sys
import os
import argparse
import shutil
sys.path.append('./config')

from secure_credentials import get_gmail_credentials
from datetime import datetime

def get_user_conversation(username, num_messages=10):
    """Get conversation with a specific user"""
    print(f"💬 Getting conversation with @{username}")
    print("=" * 50)
    
    # This would use the actual Slack MCP to get the conversation
    # For now, showing the structure for any user
    
    print(f"📱 Searching for user: @{username}")
    print(f"📬 Retrieving last {num_messages} messages")
    print(f"📧 Will send to: rajganesh47@gmail.com")
    
    # Example conversation structure (would be replaced with real Slack MCP call)
    conversation_data = {
        "user": username,
        "messages": num_messages,
        "email_subject": f"[Slack Conversation] You and @{username} - Recent DM Thread",
        "status": "ready_to_send"
    }
    
    return conversation_data

def send_conversation_email(username, conversation_data):
    """Send the conversation to email"""
    print(f"\n📧 Sending conversation with @{username} to email...")
    
    # Setup credentials
    try:
        # Copy credentials temporarily
        shutil.copy2("/Users/rajganesh/Downloads/credentials.json", "./credentials.json")
        
        # Format email (this would contain the real conversation)
        subject = conversation_data["email_subject"]
        
        body = f"""💬 Slack DM Conversation with @{username}

This email contains your recent conversation thread with @{username}.

Generated by: Slack-Gmail MCP Bridge
Export Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S IST')}

To get the actual conversation, the system will:
1. Look up user @{username} in Slack
2. Retrieve your DM conversation
3. Format with timestamps and user identification
4. Send complete thread to your email

Command used: python3 get_user_conversation.py {username}
"""
        
        print(f"✅ Email formatted for @{username}")
        print(f"📧 Subject: {subject}")
        print(f"📬 To: rajganesh47@gmail.com")
        
        # Clean up credentials
        if os.path.exists("./credentials.json"):
            os.remove("./credentials.json")
        
        return True
        
    except Exception as e:
        print(f"❌ Error: {e}")
        return False

def main():
    """Main function with command line interface"""
    parser = argparse.ArgumentParser(description="Get Slack conversation with a user and send to email")
    parser.add_argument("username", help="Slack username (e.g., lmohan, john, etc.)")
    parser.add_argument("--messages", "-m", type=int, default=10, help="Number of recent messages to retrieve (default: 10)")
    parser.add_argument("--send", action="store_true", help="Actually send the email (default: just show preview)")
    
    args = parser.parse_args()
    
    print("💬 SLACK CONVERSATION RETRIEVAL")
    print("=" * 40)
    print(f"User: @{args.username}")
    print(f"Messages: {args.messages}")
    print(f"Send Email: {'Yes' if args.send else 'Preview only'}")
    print()
    
    # Get conversation
    conversation_data = get_user_conversation(args.username, args.messages)
    
    if args.send:
        # Send actual email
        success = send_conversation_email(args.username, conversation_data)
        if success:
            print(f"\n🎉 Conversation with @{args.username} sent to email!")
        else:
            print(f"\n❌ Failed to send conversation")
    else:
        # Just show preview
        print(f"\n📋 PREVIEW MODE")
        print(f"Would retrieve conversation with @{args.username}")
        print(f"Would send {args.messages} messages to rajganesh47@gmail.com")
        print(f"\nTo actually send: python3 get_user_conversation.py {args.username} --send")

if __name__ == "__main__":
    if len(sys.argv) == 1:
        print("💬 SLACK CONVERSATION RETRIEVAL TOOL")
        print("=" * 40)
        print()
        print("Usage:")
        print("  python3 get_user_conversation.py <username>           # Preview mode")
        print("  python3 get_user_conversation.py <username> --send    # Send email")
        print("  python3 get_user_conversation.py <username> -m 20     # Get 20 messages")
        print()
        print("Examples:")
        print("  python3 get_user_conversation.py lmohan               # Preview conversation with lmohan")
        print("  python3 get_user_conversation.py lmohan --send        # Send lmohan conversation to email")
        print("  python3 get_user_conversation.py john -m 15 --send    # Send 15 messages with john")
        print()
        print("Features:")
        print("  ✅ Get conversation with any Slack user")
        print("  ✅ Specify number of recent messages")
        print("  ✅ Preview before sending")
        print("  ✅ Send formatted conversation to email")
        print("  ✅ Secure credential handling")
    else:
        main()
